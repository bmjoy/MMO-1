syntax = "proto3";

import "data.proto";
import "const.proto";
import "excelconst.proto";
package Proto;


message C2B_JoinBattle
{
	 int32 MapID =1;
	 string Session=2;
	 string AccountUuid=3;
	 int32 Version=4;
}

message B2C_JoinBattle
{
	 ErrorCode Code=1;
}

message C2B_ExitBattle
{
	 string AccountUuid = 1;
}

message B2C_ExitBattle
{
	 ErrorCode Code=1;
}

//点击释放技能
message Action_ClickSkillIndex
{
	 int32 MagicId = 1;//技能id
	 int32 Target =  2;//技能目标
}
//自动寻敌
message Action_AutoFindTarget
{
	 bool Auto =1;
}

message Action_MoveDir
{
	Vector3 Forward = 1;
	bool Fast =2;
	Vector3 Position =3;
}

message Action_NormalAttack
{

}
//notify action

//元素退出场景
message Notify_ElementExitState
{
	 int32 Index=1;
}

//创建一个释放者
message Notify_CreateReleaser
{
     int32 Index=1;
	 int32 ReleaserIndex=2;
	 int32 TargetIndex=3;
	 string MagicKey=4;
	 Vector3 Position = 5;
}

//战斗中的角色
message Notify_CreateBattleCharacter
{
	 int32 Index=1;
	 string AccountUuid=2;//用户ID
	 int32 ConfigID=3; //配表ID
	 int32 TeamIndex=4; //阵营ID
	 Vector3 Position=5;//位置
	 Vector3 Forward=6;//朝向
	 int32 Level=7; //等级
	 string Name=14; //名字
	 float Speed=15;//移动速度
}

//创建一个飞行物
message Notify_CreateMissile
{
	int32 Index =1;
	int32 ReleaserIndex=2;
	string ResourcesPath=3;
	float Speed=4;//速度
	string FromBone=6;
	string ToBone=7;
	Vector3 Offset=8;
}

enum MoveType
{
	NormalMove = 0;//普通移动
	Back =1;//后退
	Jump =2;//跳跃
}

message Notify_CharacterSetPosition
{
	 int32 Index=1;
	 Vector3 Position = 2;//
}

message Notify_CharacterAlpha
{
	 int32 Index=1; //角色
	 float Alpha=2; //最终的Alpha
}

message Notify_CharacterSetForword
{
	int32 Index =1;
	Vector3  Forward =2;
}

message Notify_CharacterSpeed
{
	int32 Index =1 ;
	float Speed = 2;
}
message Notify_LayoutPlayMotion
{
	 int32 Index=1;
	 string Motion=2;
}

message Notify_LookAtCharacter
{
	 int32 Index=1;//源
	 int32 Target=2;//目标
}

message Notify_CharacterMoveTo
{
	int32 Index = 1;
	Vector3 Position=2;
	Vector3 Target = 3;
	float StopDis = 4;
}

message Notify_CharacterStopMove
{
	int32 Index = 1;
	Vector3 Position=2;
}

message Notify_CharacterDeath
{
	int32 Index =1;
}

message Notify_CharacterPriorityMove
{
	int32 Index =1;
	float PriorityMove =2;
}

message Notify_CharacterSetScale
{
	int32 Index =1;
    float Scale =2;
}

message Notify_CharacterAttachMagic
{
	enum MagicType
	{
		 MT_Normal = 0;
		 MT_Normal_Append =1;
		 MT_Magic = 2;
	}
	int32 Index  =1;
	int32 MagicId =2;
	float CompletedTime = 3;
	MagicType mType = 4;
}
message Notify_CharacterMoveForward
{
	int32 Index =1;
	Vector3 Position = 2;
	Vector3 Forward = 3;
}

message Notify_LayoutPlayParticle
{
	 int32 ReleaseIndex=1;
	 int32 FromTarget=2;
	 int32 ToTarget=3;
	 string FromBoneName=4;
	 string ToBoneName=5;
	 bool Bind=6;
	 int32 DestoryType=7;
	 float DestoryTime=8;
	 string Path=9;
}

//属性修改
message Notify_PropertyValue
{
	 int32 Index=1;
	 HeroPropertyType Type=2;
	 int32 FinallyValue=3;
}

//广播血量变化
message Notify_HPChange
{
	 int32 Index=1; 
	 int32 Hp=2; //最终HP 
	 int32 Cur=3;//HP变化值
	 int32 Max=4;
}


message Notify_MPChange
{
	 int32 Index=1; 
	 int32 Mp=2; //最终MP 
	 int32 Cur=3;//MP变化值
	 int32 Max=4;
}


message Notify_DamageResult
{
	 int32 Index=1;
	 int32 TargetIndex=2;
	 bool IsMissed=3;
	 int32 Damage=4;
}

message Notify_Drop
{
	 int32 Gold=1;
	 repeated PlayerItem Items=2;
	 string AccountUuid=3;
}

message Notify_PlayerJoinState
{
     string AccountUuid=1;
     float TimeNow=2;
	 int32 Gold=3;
	 PlayerPackage Package=4;//道具列表
}

message Notify_CharacterLock
{
	int32 Index =1;
	int32 Lock = 2;
}

message Notify_CharacterPush
{
	int32 Index =1;
	Vector3 Length =2;
	Vector3 Speed =3;
}

message Notify_CharacterRelive
{
	int32 Index =1;
}

service NotifyService
{
	rpc CharacterAlpha(Void) returns (Notify_CharacterAlpha){};//1
	rpc CharacterPosition(Void) returns (Notify_CharacterSetPosition){};//2
	rpc CreateBattleCharacter(Void) returns (Notify_CreateBattleCharacter){};//3
	rpc CreateMissile(Void) returns (Notify_CreateMissile){};//4
	rpc CreateReleaser(Void) returns (Notify_CreateReleaser){};//5
	rpc DamageResult(Void) returns ( Notify_DamageResult);//6
	rpc Drop(Void) returns (Notify_Drop){};//7
	rpc ElementExitState(Void) returns (Notify_ElementExitState){};//8
	rpc HPChange(Void) returns (Notify_HPChange); //11
	rpc LayoutPlayMotion(Void) returns (Notify_LayoutPlayMotion);//12
	rpc LayoutPlayParticle(Void) returns (Notify_LayoutPlayParticle);//13
	rpc LookAtCharacter(Void) returns (Notify_LookAtCharacter);//14
	rpc MPChange(Void) returns (Notify_MPChange);//15
	rpc PlayerJoinState(Void) returns (Notify_PlayerJoinState);//16
	rpc PropertyValue(Void) returns (Notify_PropertyValue){ };//17
	rpc CharacterSetForword(Void) returns (Notify_CharacterSetForword){};//19
	rpc CharacterMoveTo(Void) returns (Notify_CharacterMoveTo){};//20
	rpc CharacterStopMove(Void) returns (Notify_CharacterStopMove);//21
	rpc CharacterDeath(Void) returns (Notify_CharacterDeath);//22
	rpc CharacterPriorityMove(Void) returns (Notify_CharacterPriorityMove);//23
	rpc CharacterSetScale(Void) returns (Notify_CharacterSetScale){};//24
	rpc CharacterAttachMagic(Void) returns (Notify_CharacterAttachMagic);//25
	rpc CharacterMoveForward(Void) returns (Notify_CharacterMoveForward){};//26
	rpc CharacterSpeed(Void) returns(Notify_CharacterSpeed){};//27
	rpc CharacterLock(Void) returns (Notify_CharacterLock){};//28
	rpc CharcaterPush(Void) returns (Notify_CharacterPush){};//29
	rpc CharacterRelive(Void) returns (Notify_CharacterRelive){};//30
}

service ActionService
{
	rpc ClickSkillIndex(Action_ClickSkillIndex)returns(Void){};//1
	rpc AutoFindTarget(Action_AutoFindTarget)returns(Void){};//2
	rpc MoveDir(Action_MoveDir)returns(Void){};//3
	rpc NormalAttack (Action_NormalAttack) returns (Action_NormalAttack){};//4
}

service BattleServerService
{
	rpc ExitBattle(C2B_ExitBattle)returns(B2C_ExitBattle){};//1
	rpc JoinBattle(C2B_JoinBattle) returns (B2C_JoinBattle){};//3
}